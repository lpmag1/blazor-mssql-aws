@page "/forms"
@using Blazor.Models
@using Microsoft.EntityFrameworkCore
@using System.Threading.Tasks
@rendermode InteractiveServer
@inject FormCustomizationContext DbContext
@inject NavigationManager NavigationManager

<PageTitle>Forms</PageTitle>

<h1>Edit Forms</h1>
<button type="button" class="btn btn-primary mb-3" @onclick="OnClick">Add Form</button>
<div class="mt-4 p-3 border rounded-3">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Inputs</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var form in forms)
            {
                <tr>
                    <th scope="row">@form.Id</th>
                    <td>@form.Name</td>
                    <td>
                        @foreach (var input in form.Inputs)
                        {
                            <div>@input.Label - @input.InputType?.Name</div>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    private List<Form> forms = new();

    protected override async Task OnInitializedAsync()
    {
        forms = await DbContext.Forms
        .Include(f => f.Inputs)
        .ThenInclude(i => i.InputType)
        .ToListAsync();
    }

    private async Task OnClick()
    {
        var newForm = new Form
        {
            Name = "New Form"
        };
        await DbContext.Forms.AddAsync(newForm);
        await DbContext.SaveChangesAsync();
        NavigationManager.NavigateTo($"/forms/{newForm.Id}");
    }
}